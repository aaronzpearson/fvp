% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.tracking.R
\name{data.tracking}
\alias{data.tracking}
\alias{gps.data}
\alias{sa.data}
\title{Player Tracking Data}
\usage{
data.tracking(game.speed, game.accel)

gps.data(game.speed, game.accel)

sa.data(game.speed, game.accel)
}
\arguments{
\item{game.speed}{The player's speed vector}

\item{game.accel}{The player's acceleration vector}
}
\value{
A data.frame that contains clean player tracking data
}
\description{
This is a generic function that builds a data.frame that can be applied in subsequent analyses. If the athlete's data
is not in the form provided by this function, the \code{_.player.profile()} functions will return an error because
of inconsistent variable names.
}
\details{
Although \code{_.data()} functions return cleaned data, they do not behave the same. Rather, each function
is built to accomodate future analyses within the same family of functions. For example, \code{gps.data()} and
\code{sa.data()} functions build data sets that are comprised of a player's observed speed and acceleration. Conversely,
\code{scout.data()} takes on a players distance and time splits. Therefore, it is recommended that functions be
kept within their family.

Functions that are of the form \code{_.data._()} do not handle player tracking data. Rather, they are utilized in
analyses that require more information like a player's height and mass.
}
\section{Functions}{
\itemize{
\item \code{gps.data}: Handles GPS and LPS player tracking data

\item \code{sa.data}: Handles speed-acceleration player tracking data
}}

\note{
The input game data is assumed to be in metric. Speed must be in m/s and acceleration in m/s/s. If it is not,
values that are returned are not representative of a player's true sprint potential. If your data needs to be converted,
use the \code{convert.to.metric()} function. See the \code{convert.to.metric()} documentation for examples on automating
the process.
}
